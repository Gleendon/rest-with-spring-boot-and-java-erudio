package br.com.erudio.unittestes.mockito.services;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.when;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestInstance;
import org.junit.jupiter.api.TestInstance.Lifecycle;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;

import br.com.erudio.services.PersonServices;
import br.com.erudio.unittests.mapper.mocks.MockPerson;

//Definindo o ciclo de vida do teste, será realizado por classe
@TestInstance(Lifecycle.PER_CLASS)

//Extendendo da extensão 
@ExtendWith(MockitoExtension.class)
class PersonServicesTest {
	
	//Instanciando a classe teste que contei os mock a serem testados
	MockPerson input;
	
	//Injeção controlada pelo mockito, para acesar as informações do mock e não da base
	private PersonServices service;

	@BeforeEach
	void setMocks() throws Exception {
		input = new MockPerson();
		
		//injetando os mocks no service
		MockitoAnnotations.openMocks(this);
	}

	@Test
	void testFindById() {
		fail("Not yet implemented");
	}

	@Test
	void testFindAll() {
		fail("Not yet implemented");
	}

	@Test
	void testCreate() {
		fail("Not yet implemented");
	}

	@Test
	void testUpdate() {
		fail("Not yet implemented");
	}

	@Test
	void testDelete() {
		fail("Not yet implemented");
	}

}
